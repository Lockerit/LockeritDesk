/*******************************************************************************************************************************************/

🔐 Asignar locker (/api/lockers/assign)

POST /api/lockers/assign

Descripción: Activa el monedero, espera que se ingrese el valor configurado (ej: $1000), y al completarlo asigna y abre un locker.

📥 Body (JSON)

{
  "phone": "3001234567",
  "pin": "1234"
}

✅ Respuesta exitosa

{
  "success": true,
  "message": "Locker asignado y abierto exitosamente",
  "lockerCode": "F10"
}
/*{
    "success": true,
    "message": "Locker asignado y abierto exitosamente",
    "lockerCode": "F10"
}*/

❌ Errores comunes

409 Conflict → No hay lockers disponibles.

401 Unauthorized → Ya existe una sesión activa para ese número de teléfono.

500 Internal Server Error → Fallo del hardware.

/*******************************************************************************************************************************************/

🔓 Abrir locker para retiro (   )

POST /api/lockers/remove

Descripción: Abre un locker previamente asignado (si coincide el teléfono y el PIN).

📥 Body (JSON)

{
  "phone": "3001234567",
  "pin": "1234",
}

✅ Respuesta exitosa

{
  "success": true,
  "message": "Locker abierto exitosamente",
  "lockerCode": "F10"
}
/*******************************************************************************************************************************************/

🔄 Ver todos los lockers y su estado (/api/lockers/status)

GET /api/lockers/status

Descripción: Muestra el estado de todos los lockers configurados.

✅ Respuesta

Status: [
  "ocupado",
  "libre",
  "Reservado",
  "Deshabilitado"
]


{
  "ocupado": 10,
  "libre": 30,
  "Reservado": 2,
  "Deshabilitado": 5,
  "status": {
    "A1": "ocupado",
    "A2": "libre",
    "B1": "libre"
  }
}
/*******************************************************************************************************************************************/

📦 Ver solo los disponibles (/api/lockers/available) deprecate

GET /api/lockers/availablea

Descripción: Devuelve un listado de los lockers libres.

[
  "A2",
  "B1",
  "C3"
]
/*******************************************************************************************************************************************/

🔁 WebSocket del monedero (/ws/connect) la conexión se establece desde el inicio de la aplicación

URL:

ws: //<IP>:8080/ws/connect

📥 Cliente debe:

1. Abrir conexión WebSocket antes de hacer POST a /assign.


2. Escuchar mensajes con la estructura: {
  "total": 800,
  "completo": false,
}

Cuando completo: true, se cierra el WebSocket automáticamente.

📤 El cliente no debe enviar nada por el WebSocket, solo escuchar.

/*******************************************************************************************************************************************/

🔐 Abrir locker por Id (/api/lockers/open)

POST /api/lockers/open

Descripción: Abre casillero únicamente o abre y cambia estado para dejarlo libre.

📥 Body (JSON)

{
  "lockerCode": "A1",
}

✅ Respuesta exitosa

{
  "success": true,
  "message": "Locker abierto exitosamente",
  "lockerCode": "A1"
}

/*******************************************************************************************************************************************/

🔐 Abrir locker por Id (/api/lockers/setstatus)

POST /api/lockers/setstatus

Descripción: Abre casillero únicamente o abre y cambia estado para dejarlo libre.

📥 Body (JSON)

{
  "lockerCode": "A1",
  "status": "ocupado"
}

✅ Respuesta exitosa

{
  "success": true,
  "message": "Estado cambiado exitosamente",
  "lockerCode": "A1"
}